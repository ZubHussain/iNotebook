{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\OneDrive\\\\Desktop\\\\Backend\\\\trial\\\\src\\\\contexts\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:8000\";\n  const notesInitial = [{\n    _id: {\n      $oid: \"366f072d465ef55bb7e8a1c8f\"\n    },\n    user: {\n      $oid: \"66f07230fs65ef55bb7e8a1c88\"\n    },\n    title: \"My name is Zubair\",\n    description: \"I used express\",\n    tag: \"Happy\",\n    __v: 0\n  }, {\n    _id: {\n      $oid: \"4566f072d465ef55bb7e8a1c8f\"\n    },\n    user: {\n      $oid: \"66f0723065ef5gf5bb7e8a1c88\"\n    },\n    title: \"My name is Zubair\",\n    description: \"I used express\",\n    tag: \"Happy\",\n    __v: 0\n  }, {\n    _id: {\n      $oid: \"66f0752d465ef55bb7e8a1c8f\"\n    },\n    user: {\n      $oid: \"66f072306dsd5ef55bb7e8a1c88\"\n    },\n    title: \"My name is Zubair\",\n    description: \"I used express\",\n    tag: \"Happy\",\n    __v: 0\n  }, {\n    _id: {\n      $oid: \"66f0726d465ef55bb7e8a1c8f\"\n    },\n    user: {\n      $oid: \"66f0723065efsasa55bb7e8a1c88\"\n    },\n    title: \"My name is Zubair\",\n    description: \"I used express\",\n    tag: \"Happy\",\n    __v: 0\n  }, {\n    _id: {\n      $oid: \"66f072d4765ef55bb7e8a1c8f\"\n    },\n    user: {\n      $oid: \"66f0723065ef55bb7eggr8a1c88\"\n    },\n    title: \"My name is Zubair\",\n    description: \"I used express\",\n    tag: \"Happy\",\n    __v: 0\n  }];\n  const [notes, setNotes] = useState(notesInitial);\n\n  //Add a note\n  const addNote = async (title, description, tag) => {\n    //API call\n    const response = await fetch(`${host}/notes/addnotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    // console.log(json)\n\n    const newNote = {\n      _id: {\n        $oid: \"166f072d465ef55bssb7e8a1c8f\"\n      },\n      user: {\n        $oid: \"66f07asa23065ef55bb7e8a1c88\"\n      },\n      title: title,\n      description: description,\n      tag: tag,\n      __v: 0\n    };\n    setNotes(notes.concat(newNote));\n  };\n\n  //delete a note\n  const deleteNote = async (id, title, description, tag) => {\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n    const response = await fetch(`${host}/notes/updatenotes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    // console.log(json)\n\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  };\n\n  //update a note\n  const editNote = async (id, title, description, tag) => {\n    //API call\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","_id","$oid","user","title","description","tag","__v","notes","setNotes","addNote","response","fetch","method","headers","body","JSON","stringify","json","newNote","concat","deleteNote","id","index","length","element","filter","note","editNote","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/john/OneDrive/Desktop/Backend/trial/src/contexts/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:8000\";\r\n\r\n  const notesInitial = [\r\n    {\r\n      _id: {\r\n        $oid: \"366f072d465ef55bb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f07230fs65ef55bb7e8a1c88\",\r\n      },\r\n      title: \"My name is Zubair\",\r\n      description: \"I used express\",\r\n      tag: \"Happy\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: {\r\n        $oid: \"4566f072d465ef55bb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f0723065ef5gf5bb7e8a1c88\",\r\n      },\r\n      title: \"My name is Zubair\",\r\n      description: \"I used express\",\r\n      tag: \"Happy\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: {\r\n        $oid: \"66f0752d465ef55bb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f072306dsd5ef55bb7e8a1c88\",\r\n      },\r\n      title: \"My name is Zubair\",\r\n      description: \"I used express\",\r\n      tag: \"Happy\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: {\r\n        $oid: \"66f0726d465ef55bb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f0723065efsasa55bb7e8a1c88\",\r\n      },\r\n      title: \"My name is Zubair\",\r\n      description: \"I used express\",\r\n      tag: \"Happy\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: {\r\n        $oid: \"66f072d4765ef55bb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f0723065ef55bb7eggr8a1c88\",\r\n      },\r\n      title: \"My name is Zubair\",\r\n      description: \"I used express\",\r\n      tag: \"Happy\",\r\n      __v: 0,\r\n    },\r\n  ];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  //Add a note\r\n  const addNote = async(title, description, tag) => {\r\n    //API call\r\n    const response = await fetch(`${host}/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n      body: JSON.stringify({title,description,tag}),\r\n    });\r\n    const json = response.json()\r\n    // console.log(json)\r\n\r\n    const newNote = {\r\n      _id: {\r\n        $oid: \"166f072d465ef55bssb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f07asa23065ef55bb7e8a1c88\",\r\n      },\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      __v: 0,\r\n    };\r\n\r\n    setNotes(notes.concat(newNote));\r\n  };\r\n\r\n  //delete a note\r\n  const deleteNote = async(id,title,description,tag) => {\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n\r\n    const response = await fetch(`${host}/notes/updatenotes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n      body: JSON.stringify({title,description,tag}),\r\n    });\r\n    const json = response.json();\r\n    // console.log(json)\r\n\r\n \r\n\r\n    const newNote = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNote);\r\n  };\r\n\r\n  //update a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    //API call\r\n\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}