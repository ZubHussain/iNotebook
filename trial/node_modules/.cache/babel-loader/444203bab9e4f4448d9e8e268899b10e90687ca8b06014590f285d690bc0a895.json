{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\OneDrive\\\\Desktop\\\\Backend\\\\trial\\\\src\\\\contexts\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:8000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  //==========================================Get all Notes ==============================================================\n  const getNotes = async () => {\n    //API call\n    const response = await fetch(`${host}/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  //==========================================Add a note ==============================================================\n  const addNote = async (title, description, tag) => {\n    //API call\n    const response = await fetch(`${host}/notes/addnotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const newNote = {\n      _id: {\n        $oid: \"166f072d465ef55bssb7e8a1c8f\"\n      },\n      user: {\n        $oid: \"66f07asa23065ef55bb7e8a1c88\"\n      },\n      title: title,\n      description: description,\n      tag: tag,\n      __v: 0\n    };\n    setNotes(notes.concat(newNote));\n  };\n\n  //delete a note\n  const deleteNote = async id => {\n    //API call\n    const response = await fetch(`${host}/notes/deletenotes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      }\n    });\n    const json = response.json();\n    setNotes(json);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  };\n\n  //update a note\n  const editNote = async (id, title, description, tag) => {\n    //API call\n    const response = await fetch(`${host}/notes/updatenotes/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    // setNotes(json)\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  const updateNote = async id => {\n    //API\n    const response = fetch(`${host}/notes/updatenotes/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\"\n      }\n    });\n    console.log(responses);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes,\n      updateNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","addNote","title","description","tag","body","JSON","stringify","console","log","newNote","_id","$oid","user","__v","concat","deleteNote","id","filter","note","editNote","index","length","element","updateNote","responses","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/john/OneDrive/Desktop/Backend/trial/src/contexts/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:8000\";\r\n\r\n  const notesInitial = [];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  //==========================================Get all Notes ==============================================================\r\n  const getNotes = async () => {\r\n    //API call\r\n    const response = await fetch(`${host}/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json)\r\n  };\r\n\r\n  //==========================================Add a note ==============================================================\r\n  const addNote = async (title, description, tag) => {\r\n    //API call\r\n    const response = await fetch(`${host}/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = response.json()\r\n    console.log(json)\r\n\r\n    const newNote = {\r\n      _id: {\r\n        $oid: \"166f072d465ef55bssb7e8a1c8f\",\r\n      },\r\n      user: {\r\n        $oid: \"66f07asa23065ef55bb7e8a1c88\",\r\n      },\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      __v: 0,\r\n    };\r\n\r\n    setNotes(notes.concat(newNote));\r\n  };\r\n\r\n  //delete a note\r\n  const deleteNote = async (id) => {\r\n\r\n     //API call\r\n     const response = await fetch(`${host}/notes/deletenotes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n\r\n    });\r\n    const json = response.json();\r\n    setNotes(json)\r\n\r\n    const newNote = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNote);\r\n  };\r\n\r\n  //update a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    //API call\r\n    const response = await fetch(`${host}/notes/updatenotes/${id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json =  response.json();\r\n    console.log(json)\r\n    // setNotes(json)\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateNote = async (id)=>{\r\n    //API\r\n    const response = fetch(`${host}/notes/updatenotes/${id}`, { \r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZmMDcyMzA2NWVmNTViYjdlOGExYzg4In0sImlhdCI6MTcyNzAzMzkzMX0.m65flM3XKhHpIqa1lRJ498LO8zcsveNtbsbqjy99wEk\",\r\n      },\r\n    });\r\n    console.log(responses)\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNote, deleteNote, editNote, getNotes,updateNote }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}